# docker box definition
box:
  id: openjdk:8
  ports:
    - "8080"

# Build definition
build:
  # The steps that will be executed on build
  steps:
    - script:
        name: clean up the cache dirs
        code: |
          if [ "-d $USER/.gradle" ]; then
            if [ "$(ls -A $USER/.gradle)" ]; then
              echo "The default cache dir $USER/.gradle is not Empty. Delete it."
              rm -rf $USER/.gradle
            fi
          fi
          if [ "$(ls -A $WERCKER_CACHE_DIR)" ]; then
            echo "The wercker cache dir $WERCKER_CACHE_DIR is not Empty. Delete it."
            rm -rf $WERCKER_CACHE_DIR/*
          fi
    # A step that executes `gradlew build` command
    - script:
        name: gradle build
        code: |
          echo $WERCKER_CACHE_DIR
          find $WERCKER_CACHE_DIR -name \*.\*
          echo "export GRADLE_USER_HOME=$WERCKER_CACHE_DIR/downloaded"
          export GRADLE_USER_HOME=$WERCKER_CACHE_DIR/downloaded
          ./gradlew --build-cache --project-cache-dir=$WERCKER_CACHE_DIR/project build

# defining the WerckerCacheDir pipeline
WerckerCacheDir:
  steps:
    - script:
      name: gradlew bootRun using wercker cache dir
      code: |
        start_time=`date +%s`

        echo "export GRADLE_USER_HOME=$WERCKER_CACHE_DIR/downloaded"
        export GRADLE_USER_HOME=$WERCKER_CACHE_DIR/downloaded

        echo "Run 'gradlew bootRun' using wercker cache dir. Kill the process when seeing the matching string from the process output."
        echo "Print out the command execution time."

        command="./gradlew -d --build-cache --project-cache-dir=$WERCKER_CACHE_DIR/project bootRun"
        log="prog.log"
        match="restartedMain] demo.Hello                               : Started Hello in"
        echo $command
        
        $command > "$log" 2>&1 &
        pid=$!
        
        while true
        do
          if fgrep --quiet "$match" "$log"
          then
            kill $pid
            echo "Found the output string '$match'"
            echo "Killed process $pid "
            break
          fi
        done
        end_time=`date +%s`
        echo "The gradlew bootRun command execution time was `expr $end_time - $start_time`s."

# defining the DefaultCacheDir pipeline
DefaultCacheDir:
  steps:
    - script:
      name: gradlew bootRun using default cache dir
      code: |
        start_time=`date +%s`

        echo "Run 'gradlew bootRun' with default cache dir. Kill the process when seeing the matching string from the process output."
        echo "Print out the command execution time."

        export GRADLE_USER_HOME=
        command="./gradlew -d bootRun"

        echo $command

        log="prog.log"
        match="restartedMain] demo.Hello                               : Started Hello in"
        
        $command > "$log" 2>&1 &
        pid=$!
        
        while true
        do
          if fgrep --quiet "$match" "$log"
          then
            kill $pid
            echo "Found the output string '$match'"
            echo "Killed process $pid"
            break
          fi
        done
        end_time=`date +%s`
        echo "The gradlew bootRun command execution time was `expr $end_time - $start_time`s."

